@use "../theme/colors" as sskColor;
@use "../theme/fonts" as sskFont;
@use "sass:color";
@use "sass:math";
@use "sass:map";
@import "../theme/colors";



/* Default Button */
.btn{
   @include buttonMixin($br:true);
   color: sskColor.$default;
}

@each $key, $value in $colors {


    .btn-#{$key}{
        @include buttonMixin($value, false, true);
        &:hover{
            background-color: color.scale($value, $lightness: 10%);
        }
    }

    .btn-#{$key}-outlined{
        @include buttonMixin($value, true, true);
        &:hover{
            background-color: $value;
        }
    }
}

/* Gradient button */

%btn-gradient{
    @include buttonMixin($br:true);
    position: relative;
    outline:none;
    border: none;

    span{
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
        font-size: $base-font-size * 0.8;
        z-index: 1;
        position: relative;
        background: transparent;
    }

    &::after{
        content: '';
        position: absolute;
        display: block;
        border-radius: $base-border-radius;
        width: calc(100% - 8px);
        height: calc(100% - 8px);
        top: 4px;
        left: 4px;
    }

    &::before{
        content: '';
        position: absolute;
        display: block;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        border-radius: $base-border-radius;
    }

    &:hover{
        background-size: 400%;
        animation: rotateBorder 10s linear infinite;

        &::before{
            opacity: 1;
            filter: blur(5px);
            transition: 0.3s opacity ease-in-out;
         }
    }
}


@each $value in $bg-gradients {
    .btn-gradient-dark-#{$value}{
        @extend %btn-gradient;
        @include gradient-condition($value);

        span{
            color: white;  
        }

        &::after{
            background-color: rgb(51, 51, 51);
        }

    }

    .btn-gradient-light-#{$value}{
        @extend %btn-gradient;
        @include gradient-condition($value);

        span{
            color: black;  
        }

        &::after{
            background-color: white;
        }

    }
}


@keyframes rotateBorder {
    0%{
        background-position: 0 0;
    }
    50%{
        background-position: 400% 0;
    }
    100%{
        background-position: 0 0;
    }
}


/* Modern Hover effect on button */

%hvoalohany{
    border: $base-border-thickness * 2  solid black;
    content: "";
    height: calc(100% - 3px);
    width: calc(100% - 3px);
    bottom: 0;
    z-index: 1;
    transition: transform 0.3s ease-in;
    position: absolute;
    left: 0;
    top:0
}

.btn-hvoalohany{
    @include buttonMixin();
    background-color: white;
    position: relative;

    &::after{
        @extend  %hvoalohany;
    }

    &::before{
        @extend  %hvoalohany;
    }

    &:hover{
        &::after{
            transform: translate(-3px, -3px);
        }

        &::before{
            transform: translate(3px, 3px);
        }
    }
}

.btn-hfaharoa{
    @include buttonMixin();
    background-color: white;
    position: relative;
    border: $base-border-thickness * 2 solid black;
    padding: $base-padding * 0.85 $base-padding * 2;

    span{
        position: relative;
        z-index: 3
        ;
    }

    &::before{
        content: "";
        position: absolute;
        top: 6px;
        left: -2px;
        width: calc(100% + 5px);
        height: calc(100% - 12px);
        transform: scaleY(1);
        background-color: white;
        transition: 0.5s ease-in-out;
        transition-delay: 0.3s;
    }

    &::after{
        content: "";
        position: absolute;
        top: -2px;
        left: 5.5px;
        width: calc(100% - 12px);
        height: calc(100% + 5px);
        transform: scaleY(1);
        background-color: white;
        transition: 0.5s ease-in-out;
    }

    &:hover{
        &::before{
            transform: scale(0);
        }

        &::after{
            transform: scale(0);
        }
    }

}

%hfahatelo{
    border: $base-border-thickness * 2  solid black;
    content: "";
    height: calc(100% - 3px);
    width: calc(100% - 3px);
    bottom: 0;
    z-index: 1;
    position: absolute;
}

.btn-hfahatelo{
    @include buttonMixin();
    background-color: white;
    position: relative;

    &::after{
        @extend %hfahatelo;
        top:0;
        left: 0;
    }

    &::before{
        @extend %hfahatelo;
        bottom: 1px;
        right: 0;
    }

    
}

.btn-hfahaefatra{
    @include buttonMixin();
    background-color: white;
}
